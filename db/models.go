// Code generated by sqlc. DO NOT EDIT.

package db

import (
	"database/sql"
	"fmt"
	"time"
)

type Status string

const (
	StatusActive   Status = "active"
	StatusInactive Status = "inactive"
)

func (e *Status) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Status(s)
	case string:
		*e = Status(s)
	default:
		return fmt.Errorf("unsupported scan type for Status: %T", src)
	}
	return nil
}

type Interest struct {
	ID           int32        `json:"id"`
	InterestName string       `json:"interestName"`
	InterestImg  string       `json:"interestImg"`
	Updatedat    sql.NullTime `json:"updatedat"`
}

type Place struct {
	ID           int32  `json:"id"`
	PlaceName    string `json:"placeName"`
	Location     string `json:"location"`
	LocationName string `json:"locationName"`
	PalceImg     string `json:"palceImg"`
	InterestID   int32  `json:"interestID"`
}

type Trip struct {
	ID         int32     `json:"id"`
	TripName   string    `json:"tripName"`
	Cost       int32     `json:"cost"`
	StartDate  time.Time `json:"startDate"`
	Status     Status    `json:"status"`
	Orgernizer int32     `json:"orgernizer"`
}

type TripMember struct {
	ID     int32 `json:"id"`
	TripID int32 `json:"tripID"`
	Member int32 `json:"member"`
}

type User struct {
	ID         int64          `json:"id"`
	Email      string         `json:"email"`
	Username   string         `json:"username"`
	ProfilePic sql.NullString `json:"profilePic"`
	Status     Status         `json:"status"`
	Createdat  time.Time      `json:"createdat"`
	Updatedat  sql.NullTime   `json:"updatedat"`
}
